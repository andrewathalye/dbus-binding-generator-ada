<node name="/test/node">
   <interface name="test.interface">
      <method name="TestBasicTypesIn">
         <arg type="y" direction="in"/>
         <arg type="b" direction="in"/>
         <arg type="n" direction="in"/>
         <arg type="q" direction="in"/>
         <arg type="i" direction="in"/>
         <arg type="u" direction="in"/>
         <arg type="x" direction="in"/>
         <arg type="t" direction="in"/>
         <arg type="s" direction="in"/>
         <arg type="o" direction="in"/>
         <arg type="g" direction="in"/>
         <arg type="v" direction="in"/>
      </method>

      <method name="TestBasicTypesOut">
         <arg type="y" direction="out"/>
         <arg type="b" direction="out"/>
         <arg type="n" direction="out"/>
         <arg type="q" direction="out"/>
         <arg type="i" direction="out"/>
         <arg type="u" direction="out"/>
         <arg type="x" direction="out"/>
         <arg type="t" direction="out"/>
         <arg type="s" direction="out"/>
         <arg type="o" direction="out"/>
         <arg type="g" direction="out"/>
         <arg type="v" direction="out"/>
      </method>

      <method name="TestComplexTypes">
         <arg name="simple_arr" type="as" direction="in"/>
         <arg name="simple_dict" type="a{sv}" direction="in"/>
         <arg name="arr_struct" type="a(ts)" direction="in"/>
         <arg name="dict_struct" type="a{t(sv)}" direction="in"/>
         <arg name="dict_arr_struct" type="a{oa(gsv)}" direction="in"/>
      </method>

      <method name="TestComplexTypesOut">
         <arg name="simple_arr" type="as" direction="out"/>
         <arg name="simple_dict" type="a{sv}" direction="out"/>
         <arg name="arr_struct" type="a(ts)" direction="out"/>
         <arg name="dict_struct" type="a{t(sv)}" direction="out"/>
         <arg name="dict_arr_struct" type="a{oa(gsv)}" direction="out"/>
      </method>

      <signal name="TestSignal">
         <arg name="targ" type="s"/>
      </signal>

      <property name="TestProperty" type="s" access="readwrite"/>

      <annotation name="test.annotation" value="Test"/>
   </interface>
</node>
